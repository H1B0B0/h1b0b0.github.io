---
import type { CollectionEntry } from "astro:content";

interface Props {
  project: CollectionEntry<"work">;
}

const { data, slug } = Astro.props.project;
---

<a class="card" href={`/work/${slug}`}>
  <span class="title">{data.title}</span>
  <img
    src={data.img}
    alt={data.img_alt || ""}
    loading="lazy"
    decoding="async"
  />
</a>
<script>
  import anime from "animejs";
  function init() {
    anime({
      targets: ".card",
      opacity: [0, 1],
      translateY: [50, 0],
      scale: [0.9, 1],
      duration: 800,
      delay: anime.stagger(150, { start: 300 }),
      easing: "easeOutElastic(1, .5)",
    });

    // Ajoute un effet de parallaxe au survol
    const cards = document.querySelectorAll(".card");
    cards.forEach((card) => {
      card.addEventListener("mousemove", (e) => {
        const rect = card.getBoundingClientRect();
        const x = e.clientX - rect.left;
        const y = e.clientY - rect.top;

        const xPos = (x / rect.width - 0.5) * 20;
        const yPos = (y / rect.height - 0.5) * 20;

        card.style.transform = `
          perspective(1000px)
          rotateY(${xPos}deg)
          rotateX(${-yPos}deg)
          scale3d(1.02, 1.02, 1.02)
        `;
      });

      card.addEventListener("mouseleave", () => {
        card.style.transform =
          "perspective(1000px) rotateY(0) rotateX(0) scale3d(1, 1, 1)";
      });
    });
  }
  document.addEventListener("astro:page-load", init);
  window.addEventListener("astro:after-swap", init);
</script>
<style>
  .card {
    display: grid;
    grid-template: auto 1fr / auto 1fr;
    height: 11rem;
    background: var(--gradient-subtle);
    border: 1px solid var(--gray-800);
    border-radius: 0.75rem;
    overflow: hidden;
    box-shadow: var(--shadow-sm);
    text-decoration: none;
    font-family: var(--font-brand);
    font-size: var(--text-lg);
    font-weight: 500;
    transition:
      box-shadow var(--theme-transition),
      transform 0.3s ease;
    transform: perspective(1000px);
    transition:
      transform 0.4s ease-out,
      box-shadow 0.4s ease-out;
  }

  .card:hover {
    box-shadow:
      0 0 10px 2px rgba(46, 11, 77, 0.3),
      0 0 20px 5px rgba(51, 73, 147, 0.2);
    transform: translateY(-5px);
    transform: perspective(1000px) rotateY(5deg) scale(1.02);
    box-shadow:
      0 20px 40px rgba(0, 0, 0, 0.2),
      0 15px 20px rgba(0, 0, 0, 0.15);
  }

  .title {
    grid-area: 1 / 1 / 2 / 2;
    z-index: 1;
    margin: 0.5rem;
    padding: 0.5rem 1rem;
    background: var(--gray-999);
    color: var(--gray-200);
    border-radius: 0.375rem;
    transition: transform 0.3s ease-out;
  }

  .card:hover .title {
    transform: scale(1.05) translateX(10px);
  }

  img {
    grid-area: 1 / 1 / 3 / 3;
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.4s ease-out;
  }

  .card:hover img {
    transform: scale(1.1);
  }

  @media (min-width: 50em) {
    .card {
      height: 22rem;
      border-radius: 1.5rem;
    }

    .title {
      border-radius: 0.9375rem;
    }
  }
</style>
