---
import Icon from "astro-icon";
---

<section class="box skills" id="skills-section">
  <div class="stack gap-2 lg:gap-4">
    <Icon
      name="ant-design:code-filled"
      color="var(--accent-regular)"
      size="2.5rem"
      gradient
    />
    <h2>Skilful</h2>
    <p>
      I like code in general I'm not blocked by the boundaries of preferences.
    </p>
  </div>
  <div class="stack gap-2 lg:gap-4">
    <Icon
      name="mdi:human-greeting-variant"
      color="var(--accent-regular)"
      size="2.5rem"
      gradient
    />
    <h2>Sociable</h2>
    <p>
      I like human contact, I find that teamwork is the best thing to do to make
      better progress.
    </p>
  </div>
  <div class="stack gap-2 lg:gap-4">
    <Icon
      name="mdi:brain"
      color="var(--accent-regular)"
      size="2.5rem"
      gradient
    />
    <h2>Learning lover</h2>
    <p>
      I love to be constantly learning because otherwise I get bored. So as soon
      as I can discover things, I discover them.
    </p>
  </div>
</section>

<script>
  function initSkillsAnimation() {
    const skills = document.querySelectorAll(".box");

    const observer = new IntersectionObserver((entries) => {
      entries.forEach((entry, index) => {
        if (entry.isIntersecting) {
          anime({
            targets: entry.target,
            opacity: [0, 1],
            translateY: [30, 0],
            scale: [0.95, 1],
            duration: 800,
            delay: index * 150,
            easing: 'cubicBezier(.16, 1, .3, 1)'
          });
          observer.unobserve(entry.target);
        }
      });
    }, { threshold: 0.2 });

    skills.forEach(skill => {
      skill.style.opacity = '0';
      observer.observe(skill);
    });
  }

  document.addEventListener("astro:page-load", initSkillsAnimation);
  window.addEventListener("astro:after-swap", initSkillsAnimation);
</script>

<style>
  .box {
    position: relative;
    overflow: hidden;
    border: 1px solid var(--gray-800);
    border-radius: 0.75rem;
    padding: 1.5rem;
    background: linear-gradient(
      135deg,
      var(--gray-999_40) 0%,
      var(--gray-999) 100%
    );
    backdrop-filter: blur(10px);
    box-shadow: var(--shadow-sm);
    transform: perspective(1000px);
    transition:
      transform 0.4s ease-out,
      box-shadow 0.4s ease-out;
  }

  .box:hover {
    transform: perspective(1000px) rotateX(5deg) scale(1.02);
    box-shadow:
      0 15px 30px rgba(0, 0, 0, 0.15),
      0 5px 15px rgba(0, 0, 0, 0.1);
  }

  .box.visible {
    opacity: 1;
    transform: translateY(0);
  }

  .box::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      45deg,
      transparent 0%,
      rgba(255, 255, 255, 0.1) 100%
    );
    transform: translateX(-100%);
    transition: transform 0.6s ease;
  }

  .box:hover::before {
    transform: translateX(100%);
  }

  .skills {
    display: flex;
    flex-direction: column;
    gap: 3rem;
    opacity: 0;
    animation: slideUp 0.8s ease-out forwards;
  }

  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes slideUp {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .skills h2 {
    font-size: var(--text-lg);
    background: var(--gradient-accent);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    transition: transform 0.3s ease;
  }

  .skills h2:hover {
    transform: scale(1.05);
  }

  .skills p {
    color: var(--gray-400);
  }

  @media (min-width: 50em) {
    .box {
      border-radius: 1.5rem;
      padding: 2.5rem;
    }

    .skills {
      display: grid;
      grid-template-columns: repeat(3, 1fr);
      gap: 5rem;
    }

    .skills h2 {
      font-size: var(--text-2xl);
    }
  }
</style>
