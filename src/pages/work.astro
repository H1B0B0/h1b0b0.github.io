---
import { getCollection } from "astro:content";

import BaseLayout from "../layouts/BaseLayout.astro";

import ContactCTA from "../components/ContactCTA.astro";
import PortfolioPreview from "../components/PortfolioPreview.astro";
import Hero from "../components/Hero.astro";
import Grid from "../components/Grid.astro";

const projects = (await getCollection("work")).sort(
  (a, b) => b.data.publishDate.valueOf() - a.data.publishDate.valueOf()
);
---

<BaseLayout
  title="My Work | Etienne Mentrel"
  description="Learn about Etienne Mentrel's most recent projects"
>
  <div class="stack gap-20">
    <main class="wrapper stack gap-8">
      <Hero
        title="My Work"
        tagline="See my most recent projects below to get an idea of my past experience."
        align="start"
      />
      <Grid variant="offset">
        {
          projects.map((project) => (
            <li>
              <PortfolioPreview project={project} />
            </li>
          ))
        }
      </Grid>
    </main>
    <ContactCTA />
  </div>
</BaseLayout>

<style>
  .stack {
    opacity: 0;
    animation: fadeIn 0.8s ease-out forwards;
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  li {
    opacity: 0;
    transform: translateY(20px);
  }

  li.animate {
    animation: slideUp 0.6s ease-out forwards;
  }

  @keyframes slideUp {
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
</style>

<script>
  function initializeWorkAnimations() {
    const items = document.querySelectorAll("li");

    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry, index) => {
          if (entry.isIntersecting) {
            setTimeout(() => {
              entry.target.classList.add("animate");
            }, index * 100); // Ajoute un délai progressif pour chaque élément
          }
        });
      },
      {
        threshold: 0.1,
        rootMargin: "50px",
      }
    );

    items.forEach((item) => observer.observe(item));
  }

  document.addEventListener("astro:page-load", initializeWorkAnimations);
  window.addEventListener("astro:after-swap", initializeWorkAnimations);
</script>
