---
import BaseLayout from "../layouts/BaseLayout.astro";

import ContactCTA from "../components/ContactCTA.astro";
import Hero from "../components/Hero.astro";
import { Icon } from "astro-icon";
---

<BaseLayout
  title="About | Etienne Mentrel"
  description="About Etienne Mentrel Lorem Ipsum"
>
  <div class="stack gap-20">
    <main class="wrapper about">
      <Hero
        title="About"
        tagline="Thanks for stopping by. Read below to learn more about myself and my background."
      />

      <section>
        <h2 class="section-title">Background</h2>
        <div class="content">
          <p>
            I began my professional journey at the end of high school,
            participating in an apprenticeship program at a company specializing
            in RFID technology.
            <br />
            <br />
            During my initial training, I was not destined to become a developer
            but rather a higher-level technician. It was on the job that I learned
            Python. Subsequently, I undertook numerous Python projects for my company,
            leading me to transition into a developer role within the organization.
            <br />
            <br />
            Upon completing my DUT in Electrical Engineering and Industrial Computing,
            I decided to enroll at Epitech because I discovered a great passion for
            programming. Now, I am embarking on my journey at Epitech as a pre-MSC
            student.
          </p>
        </div>
      </section>
      <section>
        <h2 class="section-title">Education</h2>
        <div class="content" class="content">
          <p>MSC Pro</p>
          <p>2023 - 2026</p>
          <a href="https://www.epitech.eu">Epitech</a>
          <br />
          <br />
          <p>DUT génie électrique et informatique industrielle</p>
          <p>2021 - 2023</p>
          <a href="https://iuthaguenau.unistra.fr">IUT de Haguenau</a>
          <br />
          <br />
          <p>Bac STI2D Spécialité ITEC</p>
          <p>2018 - 2021</p>
          <a href="https://lycee-andre-malraux-remiremont.eu"
            >Lycée André Malraux Remiremont</a
          >
        </div>
      </section>
      <section>
        <h2 class="section-title">Skills</h2>
        <div class="content">
          <list>
            <Icon name="vscode-icons:file-type-html" size="3em" />
            <Icon name="vscode-icons:file-type-css" size="3em" />
            <Icon name="vscode-icons:file-type-astro" size="3em" />
            <Icon name="vscode-icons:file-type-python" size="3em" />
            <Icon name="logos:javascript" size="3em" />
            <Icon name="logos:c" size="3em" />
            <Icon name="logos:java" size="3em" />
            <Icon name="vscode-icons:file-type-git" size="3em" />
            <Icon name="vscode-icons:file-type-docker" size="3em" />
            <Icon name="logos:fedora" size="3em" />
            <Icon name="flat-color-icons:linux" size="3em" />
          </list>
        </div>
      </section>
    </main>
    <ContactCTA />
  </div>

  <script>
    import anime from "animejs";

    function init() {
      anime({
        targets: ".content",
        translateY: [200, 0],
        duration: 1000,
        delay: anime.stagger(100),
      });
      function animateSVG(element) {
        console.log("here");
        anime({
          targets: element,
          translateX: function (el, i) {
            return 50 + -50 * i;
          },
          translateY: function (el, i) {
            return 50 + -50 * i;
          },
          scale: function (el, i, l) {
            return l - i + 0.25;
          },
          rotate: function () {
            return anime.random(-360, 360);
          },
          duration: function () {
            return anime.random(1200, 1800);
          },
          delay: function () {
            return anime.random(5000, 3000);
          },
          borderRadius: function () {
            return ["0%", anime.random(10, 35) + "%"];
          },
          direction: "alternate",
          loop: true,
        });
      }
      let observer = new IntersectionObserver(
        (entries, observer) => {
          entries.forEach((entry) => {
            if (entry.isIntersecting) {
              // Appeler la fonction d'animation pour l'élément visible
              animateSVG(entry.target);
              // Optionnel : vous pouvez désactiver l'observation après la première animation
              observer.unobserve(entry.target);
            }
          });
        },
        { threshold: 0.5 }
      );
      document.querySelectorAll("list svg").forEach((svg) => {
        observer.observe(svg);
      });
    }

    document.addEventListener("astro:page-load", init);
    window.addEventListener("astro:after-swap", init);
  </script>

  <style>
    .about {
      display: flex;
      flex-direction: column;
      gap: 3.5rem;
    }

    img {
      max-width: 70px;
      height: auto;
    }

    section {
      display: flex;
      flex-direction: column;
      gap: 0.5rem;
      color: var(--gray-200);
    }

    .section-title {
      grid-column-start: 1;
      font-size: var(--text-xl);
      color: var(--gray-0);
    }

    .content {
      grid-column: 2 / 4;
    }

    .content :global(a) {
      text-decoration: 1px solid underline transparent;
      text-underline-offset: 0.25em;
      transition: text-decoration-color var(--theme-transition);
    }

    .content :global(a:hover),
    .content :global(a:focus) {
      text-decoration-color: currentColor;
    }

    @media (min-width: 50em) {
      .about {
        display: grid;
        grid-template-columns: 1fr 60% 1fr;
      }

      .about > :global(:first-child) {
        grid-column-start: 2;
      }

      section {
        display: contents;
        font-size: var(--text-lg);
      }
    }
  </style>
</BaseLayout>
