---
import { getCollection } from "astro:content";

// Layout import — provides basic page elements: <head>, <nav>, <footer> etc.
import BaseLayout from "../layouts/BaseLayout.astro";

// Component Imports
import CallToAction from "../components/CallToAction.astro";
import Grid from "../components/Grid.astro";
import Hero from "../components/Hero.astro";
import { Icon } from "astro-icon";
import Pill from "../components/Pill.astro";
import PortfolioPreview from "../components/PortfolioPreview.astro";

// Page section components
import ContactCTA from "../components/ContactCTA.astro";
import Skills from "../components/Skills.astro";

// Content Fetching: List four most recent work projects
const projects = (await getCollection("work"))
  .sort((a, b) => b.data.publishDate.valueOf() - a.data.publishDate.valueOf())
  .slice(0, 4);
---

<BaseLayout>
  <div class="stack gap-20">
    <div class="wrapper stack gap-8 lg:gap-20">
      <div
        style="display: flex; justify-content: center; align-items: center; height: 100%;"
      >
        <svg
          id="svgelement"
          class="neon-effect p-8"
          width="557.75"
          height="74.752"
          viewBox="0 0 557.75 74.752"
          xmlns="http://www.w3.org/2000/svg"
          ><g
            id="svgGroup"
            stroke-linecap="round"
            fill-rule="evenodd"
            font-size="9pt"
            stroke="#ff0000"
            stroke-width="0.50mm"
            fill="#ffffff00"
            class="p-8"
            ><path
              id="svg"
              d="M 13.583 72.338 L 44.75 72.338 L 51.083 38.671 L 53.083 38.671 L 59.417 72.338 L 90.583 72.338 L 104.167 2.338 L 80.75 2.338 L 73.25 47.671 L 71.25 47.671 L 61.25 2.338 L 42.917 2.338 L 32.917 47.671 L 30.917 47.671 L 23.417 2.338 L 0 2.338 L 13.583 72.338 Z M 406.167 72.338 L 428.167 72.338 L 428.167 41.338 L 430 41.338 L 438.917 72.338 L 456.083 72.338 L 465 41.338 L 466.833 41.338 L 466.833 72.338 L 488.833 72.338 L 488.833 2.338 L 459.75 2.338 L 448.333 42.254 L 446.667 42.254 L 435.25 2.338 L 406.167 2.338 L 406.167 72.338 Z M 108.75 72.338 L 171.833 72.338 L 171.833 53.838 L 131.833 53.838 L 131.833 44.921 L 170.333 44.921 L 170.333 29.754 L 131.833 29.754 L 131.833 20.838 L 171.833 20.838 L 171.833 2.338 L 108.75 2.338 L 108.75 72.338 Z M 494.667 72.338 L 557.75 72.338 L 557.75 53.838 L 517.75 53.838 L 517.75 44.921 L 556.25 44.921 L 556.25 29.754 L 517.75 29.754 L 517.75 20.838 L 557.75 20.838 L 557.75 2.338 L 494.667 2.338 L 494.667 72.338 Z M 318.917 43.338 L 296.917 43.338 C 295.199 50.357 290.672 53.963 284.294 54.637 A 21.827 21.827 0 0 1 282 54.754 A 15.841 15.841 0 0 1 266.373 43.087 A 20.468 20.468 0 0 1 265.583 37.338 A 19.457 19.457 0 0 1 267.272 29.175 A 15.792 15.792 0 0 1 282 19.921 A 18.15 18.15 0 0 1 288.576 21.04 C 291.858 22.312 294.378 24.681 295.926 28.228 A 18.67 18.67 0 0 1 296.917 31.171 L 318.917 31.171 A 40.018 40.018 0 0 0 315.875 18.963 C 309.68 4.832 295.706 0.004 282 0.004 C 259.842 0.004 244.599 13.173 242.837 33.358 A 45.781 45.781 0 0 0 242.667 37.338 A 38.874 38.874 0 0 0 247.474 56.72 C 252.203 65.045 260.203 70.901 270.491 73.367 A 49.347 49.347 0 0 0 282 74.671 C 298.041 74.671 314.153 68.186 318.21 48.113 A 47.428 47.428 0 0 0 318.917 43.338 Z M 177.667 72.338 L 238.083 72.338 L 238.083 53.088 L 200.75 53.088 L 200.75 2.338 L 177.667 2.338 L 177.667 72.338 Z M 361.917 74.671 C 386 74.671 401.583 59.754 401.583 37.338 A 38.932 38.932 0 0 0 396.8 17.956 C 392.23 9.893 384.568 4.147 374.611 1.552 A 50.306 50.306 0 0 0 361.917 0.004 C 337.833 0.004 322.25 14.921 322.25 37.338 A 38.932 38.932 0 0 0 327.033 56.72 C 331.603 64.782 339.266 70.529 349.222 73.123 A 50.306 50.306 0 0 0 361.917 74.671 Z M 346.201 43.939 A 15.953 15.953 0 0 0 361.917 54.754 C 371.083 54.754 378.667 48.421 378.667 37.338 A 20.375 20.375 0 0 0 377.632 30.737 A 15.953 15.953 0 0 0 361.917 19.921 C 352.75 19.921 345.167 26.254 345.167 37.338 A 20.375 20.375 0 0 0 346.201 43.939 Z"
              vector-effect="non-scaling-stroke"></path></g
          ></svg
        >
      </div>
      <header class="hero">
        <Hero
          title="Hello, my name is Etienne Mentrel"
          tagline="I'm Epitech student in msc 1."
          align="start"
        >
          <div class="flex flex-col items-center m-5">
            <div class="roles-container">
              <div class="roles">
                <Pill>
                  <Icon name="ic:baseline-code" size="1.33em" /> Developer
                </Pill>
                <Pill>
                  <Icon name="ic:baseline-cloud" size="1.33em" /> Devops
                </Pill>
                <Pill>
                  <Icon name="ph:music-note-fill" size="1.33em" /> Musician
                </Pill>
              </div>
              <a
                href="/assets/CV_2025-01-26_Etienne_Mentrel.pdf"
                download
                class="download-button"
                id="downloadBtn"
              >
                <Icon name="ic:round-download" size="1.33em" />
                <span>Download CV</span>
              </a>
            </div>
          </div>
        </Hero>

        <img
          alt="Etienne Mentrel"
          width="400"
          height="800"
          src="/assets/picture.jpeg"
        />
      </header>

      <Skills class="skills" />
    </div>

    <main class="wrapper stack gap-20 lg:gap-48">
      <section class="section with-cta">
        <header class="section-header stack gap-2 lg:gap-4">
          <h3>Selected Work</h3>
          <p>
            Take a look below at some of my open source work from the past few
            years.
          </p>
        </header>

        <div class="gallery animated-element">
          <Grid>
            {
              projects.map((project) => (
                <li>
                  <PortfolioPreview project={project} />
                </li>
              ))
            }
          </Grid>
        </div>

        <div class="cta">
          <CallToAction href="/work/">
            View All
            <Icon name="line-md:arrow-right" size="1.2em" />
          </CallToAction>
        </div>
      </section>

      <!-- <section class="section with-background bg-variant">
        <header class="section-header stack gap-2 lg:gap-4">
          <h3>Mentions</h3>
          <p>
            I have been fortunate enough to receive praise for my work in
            several publications. Take a look below to learn more.
          </p>
        </header>

        <div class="gallery">
          <Grid variant="small">
            {
              [
                "Smart",
                "Listening",
                "Good team mate",
                "Tech lover",
                "Interested",
              ].map((brand) => (
                <li class="mention-card">
                  <p>{brand}</p>
                </li>
              ))
            }
          </Grid>
        </div>
      </section> -->
    </main>
    <ContactCTA />
  </div>
</BaseLayout>
<script>
  import anime from "animejs";
  function updatesvgmode() {
    const svgElement = document.getElementById("svg");
    const svg = document.getElementById("svgelement");
    const isDarkMode = localStorage.getItem("theme") === "dark";
    if (svgElement && svg) {
      if (isDarkMode) {
        svg.style.filter =
          "drop-shadow(0 0 8px purple) drop-shadow(0 0 10px white) drop-shadow(0 0 30px purple)";
      } else {
        svg.style.filter = "drop-shadow(-7px 5px 5px black)";
      }
      svgElement.style.stroke = isDarkMode ? "#ffffff" : "#000000";
      svgElement.style.fill = "#ffffff00";
    }
  }
  function initializeAnimations() {
    updatesvgmode();

    // Animation moderne du hero
    anime
      .timeline({
        easing: "cubicBezier(0.33, 1, 0.68, 1)",
      })
      .add({
        targets: ".hero",
        opacity: [0, 1],
        translateY: [30, 0],
        duration: 800,
        delay: 200,
      })
      .add(
        {
          targets: ".roles",
          opacity: [0, 1],
          translateY: [20, 0],
          duration: 600,
          delay: anime.stagger(100, { from: "center" }),
        },
        "-=400"
      );

    // Animation SVG modernisée
    anime({
      targets: "#svg",
      strokeDashoffset: [anime.setDashoffset, 0],
      easing: "cubicBezier(0.33, 1, 0.68, 1)",
      duration: 2500,
      delay: 300,
      loop: true,
      direction: "alternate",
      opacity: {
        value: [0.4, 1],
        duration: 2500,
        easing: "cubicBezier(0.33, 1, 0.68, 1)",
      },
    });

    let heroImage = document.querySelector(".hero img");
    let skills = document.querySelector(".skills");
    if (skills) {
      skills.addEventListener("mouseover", () => {
        anime({
          targets: skills,
          scale: 1.05,
          duration: 200,
          easing: "easeInOutSine",
        });
      });

      skills.addEventListener("mouseout", () => {
        anime({
          targets: skills,
          scale: 1,
          duration: 200,
          easing: "easeInOutSine",
        });
      });
    }

    const portfolioItems = document.querySelectorAll(".gallery li");
    portfolioItems.forEach((item) => {
      item.addEventListener("mouseover", () => {
        anime({
          targets: item,
          scale: 1.05,
          duration: 200,
          easing: "easeInOutSine",
        });
      });

      item.addEventListener("mouseout", () => {
        anime({
          targets: item,
          scale: 1,
          duration: 200,
          easing: "easeInOutSine",
        });
      });
    });
    anime({
      targets: "#svg",
      strokeDashoffset: [anime.setDashoffset, 0],
      easing: "easeInOutSine",
      duration: 6000,
      delay: function (el, i) {
        return i * 1000;
      },
      direction: "alternate",
      loop: true,
    });
  }
  document.addEventListener("click", updatesvgmode);
  document.addEventListener("astro:page-load", initializeAnimations);
  window.addEventListener("astro:after-swap", initializeAnimations);

  function initSvgAnimation() {
    anime({
      targets: "#svg",
      strokeDashoffset: [anime.setDashoffset, 0],
      opacity: [0.4, 1],
      easing: "cubicBezier(0.22, 1, 0.36, 1)",
      duration: 3000,
      delay: function (el, i) {
        return i * 250;
      },
      loop: true,
      direction: "alternate",
      scale: {
        value: [0.98, 1],
        duration: 2000,
        easing: "cubicBezier(0.22, 1, 0.36, 1)",
      },
    });
  }

  document.getElementById("downloadBtn")?.addEventListener("click", (e) => {
    const button = e.currentTarget;
    button.setAttribute("data-downloading", "true");

    // Animate icon
    const icon = button.querySelector("svg");
    if (icon) {
      anime({
        targets: icon,
        translateY: [0, 5, 0],
        rotate: 360,
        duration: 600,
        easing: "easeOutBack",
      });
    }

    setTimeout(() => {
      button.removeAttribute("data-downloading");
    }, 1000);
  });
</script>

<style>
  .hero {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 2rem;
    padding: 2rem;
    margin-top: 2rem; /* Add margin to hero section */
  }

  .roles-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 2rem;
    width: fit-content;
  }

  .roles {
    display: flex;
    gap: 1rem;
    justify-content: center;
  }

  .hero img {
    width: 100%;
    height: auto;
    max-height: 80vh; /* Limite la hauteur maximale */
    aspect-ratio: 3/4;
    object-fit: cover;
    object-position: top 25%; /* Ajuste la position verticale */
    border-radius: 1.5rem;
    transition: all 0.3s cubic-bezier(0.16, 1, 0.3, 1);
    margin: 1rem;
    filter: drop-shadow(0 0 10px rgba(0, 0, 0, 0.1));
  }

  .hero img:hover {
    transform: scale(1.02) translateY(-5px);
    filter: drop-shadow(0 15px 15px rgba(0, 0, 0, 0.2));
  }

  .wrapper.stack {
    padding-top: 2rem; /* Add top padding */
  }

  .download-container {
    display: flex;
    justify-content: center;
    margin-top: 2rem;
    width: fit-content;
    align-items: center;
  }

  .download-button {
    width: 100%;
    max-width: fit-content;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: 0.75rem;
    padding: 0.8rem 2rem;
    background: #7612a6;
    background: linear-gradient(135deg, #7612a6 0%, #9333ea 100%);
    color: white;
    border-radius: 999px;
    font-weight: 600;
    letter-spacing: 0.5px;
    text-decoration: none;
    transition: all 0.3s cubic-bezier(0.22, 1, 0.36, 1);
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
    position: relative;
    overflow: hidden;
  }

  .download-button::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      135deg,
      rgba(255, 255, 255, 0.2) 0%,
      rgba(255, 255, 255, 0) 100%
    );
    transform: translateX(-100%);
    transition: transform 0.6s cubic-bezier(0.22, 1, 0.36, 1);
  }

  .download-button:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
  }

  .download-button:hover::before {
    transform: translateX(100%);
  }

  .download-button:active {
    transform: translateY(1px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  }

  .download-button[data-downloading="true"] {
    pointer-events: none;
    opacity: 0.8;
  }

  .download-button svg {
    transition: transform 0.3s cubic-bezier(0.22, 1, 0.36, 1);
  }

  .download-button:hover svg {
    transform: translateY(2px);
  }

  @media (min-width: 50em) {
    .download-button {
      font-size: var(--text-lg);
      padding: 0.8rem 2rem;
    }
  }

  @media (min-width: 50em) {
    .hero {
      display: grid;
      grid-template-columns: 6fr 4fr;
      padding-inline: 2.5rem;
      gap: 3.75rem;
      margin-top: 3rem; /* Larger margin on desktop */
    }

    .roles {
      margin-top: 0.5rem;
      display: flex;
      gap: 0.5rem;
    }

    .hero img {
      max-width: none;
      width: 100%;
      height: auto;
      aspect-ratio: 2/3;
      border-radius: 2rem;
    }

    .wrapper.stack {
      padding-top: 4rem; /* Larger padding on desktop */
    }

    .section {
      display: grid;
      gap: 2rem;
    }

    .section-header {
      justify-self: center;
      text-align: center;
      max-width: 50ch;
      font-size: var(--text-md);
      color: var(--gray-300);
    }

    .section-header h3 {
      font-size: var(--text-2xl);
    }

    @media (min-width: 50em) {
      .section {
        grid-template-columns: repeat(4, 1fr);
        grid-template-areas: "header header header header" "gallery gallery gallery gallery";
        gap: 5rem;
      }

      .section.with-cta {
        grid-template-areas: "header header header cta" "gallery gallery gallery gallery";
      }

      .section-header {
        grid-area: header;
        font-size: var(--text-lg);
      }

      .section-header h3 {
        font-size: var(--text-4xl);
      }

      .with-cta .section-header {
        justify-self: flex-start;
        text-align: left;
      }

      .gallery {
        grid-area: gallery;
      }

      .cta {
        grid-area: cta;
      }
    }
  }
</style>
